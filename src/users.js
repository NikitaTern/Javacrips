import fs from 'fs';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ CSV —Å—Ç—Ä–æ–∫–∏ —Å —É—á–µ—Ç–æ–º –∫–∞–≤—ã—á–µ–∫
function parseCSVLine(line) {
    const result = [];
    let current = '';
    let inQuotes = false;

    for (let i = 0; i < line.length; i++) {
        const char = line[i];

        if (char === '"') {
            inQuotes = !inQuotes;
        } else if (char === ',' && !inQuotes) {
            result.push(current.trim());
            current = '';
        } else {
            current += char;
        }
    }

    result.push(current.trim());
    return result;
}

// –ß—Ç–µ–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ CSV —Ñ–∞–π–ª–∞
fs.readFile('./data.csv', 'utf8', (err, data) => {
    if (err) {
        console.error('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞:', err);
        return;
    }

    const lines = data.split('\n');
    const headers = parseCSVLine(lines[0]); // –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    const objects = [];

    console.log('–ó–∞–≥–æ–ª–æ–≤–∫–∏:', headers);
    console.log('=== –û–ë–†–ê–ë–û–¢–ö–ê –î–ê–ù–ù–´–• ===\n');

    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É –¥–∞–Ω–Ω—ã—Ö (–Ω–∞—á–∏–Ω–∞—è —Å 1, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫)
    for (let i = 1; i < lines.length; i++) {
        if (lines[i].trim() === '') continue;

        const cells = parseCSVLine(lines[i]);

        // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏
        const obj = {
            id: parseInt(cells[0]),
            address: cells[1],
            latitude: parseFloat(cells[2]),
            longitude: parseFloat(cells[3]),
            startWork: cells[4],
            endWork: cells[5],
            startLunch: cells[6],
            endLunch: cells[7],
            level: cells[8]
        };

        objects.push(obj);

        // –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏:
        console.log(`üìç –û–±—ä–µ–∫—Ç ‚Ññ${obj.id}`);
        console.log(`   –ê–¥—Ä–µ—Å: ${obj.address}`);
        console.log(`   –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ${obj.latitude}, ${obj.longitude}`);
        console.log(`   –ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã: ${obj.startWork}-${obj.endWork}`);
        console.log(`   –û–±–µ–¥: ${obj.startLunch}-${obj.endLunch}`);
        console.log(`   –£—Ä–æ–≤–µ–Ω—å –∫–ª–∏–µ–Ω—Ç–∞: ${obj.level}`);
        console.log('---');
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å–æ –≤—Å–µ–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    console.log('\n=== –ê–ù–ê–õ–ò–¢–ò–ö–ê ===');

    // –ü–æ–¥—Å—á–µ—Ç –æ–±—ä–µ–∫—Ç–æ–≤ –ø–æ —É—Ä–æ–≤–Ω—é –∫–ª–∏–µ–Ω—Ç–∞
    const levelCount = {};
    objects.forEach(obj => {
        levelCount[obj.level] = (levelCount[obj.level] || 0) + 1;
    });

    console.log('–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ —É—Ä–æ–≤–Ω—è–º –∫–ª–∏–µ–Ω—Ç–æ–≤:');
    for (const level in levelCount) {
        console.log(`   ${level}: ${levelCount[level]} –æ–±—ä–µ–∫—Ç–æ–≤`);
    }

    // –ü–æ–∏—Å–∫ VIP –∫–ª–∏–µ–Ω—Ç–æ–≤
    const vipObjects = objects.filter(obj => obj.level === 'VIP');
    console.log(`\nVIP –∫–ª–∏–µ–Ω—Ç—ã (${vipObjects.length}):`);
    vipObjects.forEach(obj => {
        console.log(`   –û–±—ä–µ–∫—Ç ‚Ññ${obj.id}: ${obj.address}`);
    });

    // –°—Ä–µ–¥–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (–≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä)
    const avgLat = objects.reduce((sum, obj) => sum + obj.latitude, 0) / objects.length;
    const avgLng = objects.reduce((sum, obj) => sum + obj.longitude, 0) / objects.length;
    console.log(`\n–°—Ä–µ–¥–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤: ${avgLat.toFixed(6)}, ${avgLng.toFixed(6)}`);

    // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ä–µ–∫—Ç–æ–≤
    console.log(`\n–í—Å–µ–≥–æ –æ–±—ä–µ–∫—Ç–æ–≤: ${objects.length}`);
});





